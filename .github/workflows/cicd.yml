name: Our Workflow
on:
  push:
    branches:
      - 'main'
  
jobs:
  cicd:
    runs-on: ubuntu-latest
    steps:

    # build
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Test ls -al
        run: ls -al

      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
          # cache-dependency-path: |
          #   ./*.gradle*
          #   ./**/gradle-wrapper.properties
      - run: ./gradlew build --no-daemon

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # - name: Get Github Actions IP
      #   id: ip
      #   uses: haythem/public-ip@v1.3

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ap-northeast-2

      # - name: Add Github Actions IP to Security group
      #   run: aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

      # - name: Deploy to EC2
      #   uses: easingthemes/ssh-deploy@main
      #   with:
      #     SSH_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
      #     REMOTE_HOST: ${{ secrets.EC2_HOST }}
      #     REMOTE_USER: ${{ secrets.EC2_USERNAME }}
      #     TARGET: ${{ secrets.EC2_TARGET_DIR }}
      #     SOURCE: ""
      #     SCRIPT_BEFORE: |
      #       sudo su
      #       rm -rf /var/www/moongi-dev/dist
      #     SCRIPT_AFTER:  |
      #       sudo su
      #       chmod 777 -R /var/www/moongi-dev/
      #       service nginx stop
      #       service nginx start

      # - name: Remove Github Actions IP From Security Group
      #   run: aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
