name: Our Workflow
on:
  push:
    branches:
      - 'main'

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: moongi-dev-github-actions-s3-buket
  CODE_DEPLOY_APPLICATION_NAME: moongi-dev-back
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: my-code-deploy-group

jobs:
  cicd:
    runs-on: ubuntu-latest
    steps:

    # build
      - name: Checkout Source
        uses: actions/checkout@v4
        
      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
          # cache-dependency-path: |
          #   ./*.gradle*
          #   ./**/gradle-wrapper.properties

      - name: Grant Execute Permission for Gradlew
        run: chmod +x ./gradlew

      - name: Build Project
        run: ./gradlew bootJar -x test

      - name: Make zip file
        run: zip -r ./code-deploy.zip ./build/libs/*.jar ./script/* -j ./appspec.yml
        shell: bash
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload to AWS S3
        run: aws s3 cp --region ap-northeast-2 ./code-deploy.zip s3://${{ env. S3_BUCKET_NAME }}/code-deploy.zip

      # # https://docs.aws.amazon.com/codedeploy/latest/userguide/application-revisions-push.html#push-with-cli
      # - name: Upload to AWS S3
      #   run: |
      #     aws deploy push \
      #       --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
      #       --ignore-hidden-files \
      #       --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
      #       --source build/libs


      - name: Deploy to AWS EC2 from S3
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=$S3_BUCKET_NAME,key=code-deploy.zip,bundleType=zip
